#!/usr/bin/env python
from misc.utility.scons_hints import *

Import("env")
Import("env_modules")

def get_platform_lib():
    """Get the library file based on platform and architecture."""
    platform = env["platform"]
    arch = env["arch"]
    
    base_path = "#modules/rapier_3d/addons/godot-rapier3d/bin"
    
    if platform in ["macos", "osx"]:
        if arch == "arm64":
            lib_file = f"{base_path}/libgodot_rapier.macos.framework/libgodot_rapier.macos.arm64.a"
        else:
            lib_file = f"{base_path}/libgodot_rapier.macos.framework/libgodot_rapier.macos.x86_64.a"
        return lib_file
    
    elif platform == "ios":
        # iOS uses framework (contains both arm64 and x86_64)
        if arch == "arm64":
            lib_file = f"{base_path}/libgodot_rapier.ios.arm64.framework/libgodot_rapier.a"
        elif arch == "x86_64":
            lib_file = f"{base_path}/libgodot_rapier.ios.x86_64.framework/libgodot_rapier.a"
        else:
            raise Exception(f"Unsupported iOS architecture: {arch}")
        return lib_file
    
    elif platform == "linuxbsd":
        if arch == "x86_64":
            lib_file = f"{base_path}/libgodot_rapier.linux.x86_64-unknown-linux-gnu.a"
        elif arch == "arm64":
            lib_file = f"{base_path}/libgodot_rapier.linux.aarch64-unknown-linux-gnu.a"
        elif arch == "arm32":
            lib_file = f"{base_path}/libgodot_rapier.linux.armv7-unknown-linux-gnueabihf.a"
        else:
            raise Exception(f"Unsupported Linux architecture: {arch}")
        return lib_file
    
    elif platform == "windows":
        if arch == "x86_64":
            lib_file = f"{base_path}/libgodot_rapier.windows.x86_64-pc-windows-msvc.a"
        elif arch == "x86_32":
            lib_file = f"{base_path}/libgodot_rapier.windows.i686-pc-windows-msvc.a"
        elif arch == "arm64":
            lib_file = f"{base_path}/libgodot_rapier.windows.aarch64-pc-windows-msvc.a"
        else:
            raise Exception(f"Unsupported Windows architecture: {arch}")
        return lib_file
    
    elif platform == "android":
        if arch == "arm64":
            lib_file = f"{base_path}/libgodot_rapier.android.aarch64-linux-android.a"
        elif arch == "arm32":
            lib_file = f"{base_path}/libgodot_rapier.android.armv7-linux-androideabi.a"
        elif arch == "x86_64":
            lib_file = f"{base_path}/libgodot_rapier.android.x86_64-linux-android.a"
        elif arch == "x86_32":
            lib_file = f"{base_path}/libgodot_rapier.android.i686-linux-android.a"
        else:
            raise Exception(f"Unsupported Android architecture: {arch}")
        return lib_file
    
    elif platform == "web":
        if arch == "wasm32":
            lib_file = f"{base_path}/libgodot_rapier.a"
        else:
            raise Exception(f"Unsupported Web architecture: {arch}")
        return lib_file
    
    else:
        raise Exception(f"Unsupported platform: {platform}")

# Get library file
lib_file = get_platform_lib()

env.Append(LIBS=[env.File(lib_file)])

# Sources
env_rapier_3d = env_modules.Clone()
env_rapier_3d.add_source_files(env.modules_sources, "*.cpp")
